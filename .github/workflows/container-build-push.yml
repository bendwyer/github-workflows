name: container-build-push

on:
  workflow_call:
    inputs:
      filter_file_path:
        description: Path to YAML file populated with filters.
        required: false
        default: .github/filters.yml
        type: string
      images_root_folder:
        description: Root folder where images are stored. Must include trailing slash.
        required: false
        default: images/
        type: string

jobs:
  changes:
    runs-on: ubuntu-24.04
    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: ${{ inputs.filter_file_path }}

  build:
    needs:
      - changes
    if: needs.changes.outputs.images != '' && toJson(fromJson(needs.changes.outputs.images)) != '[]'
    runs-on: ${{ matrix.runners }}
    continue-on-error: true
    strategy:
      matrix:
        runners:
          - ubuntu-24.04
          - ubuntu-24.04-arm
        images: ${{ fromJSON(needs.changes.outputs.images) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.images }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.images_root_folder }}${{ matrix.images }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ghcr.io/${{ github.repository }}/${{ matrix.images }}
          outputs: type=image,push-by-digest=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }},name-canonical=true,push=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
        shell: bash

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.images }}-${{ matrix.runners == 'ubuntu-24.04' && 'linux-amd64' || 'linux-arm64' }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    needs:
      - build
      - changes
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        images: ${{ fromJSON(needs.changes.outputs.images) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ matrix.images }}-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version for image
        id: version
        run: |
          if [[ -f "${{ inputs.images_root_folder }}${{ matrix.images }}/get-version.sh" ]]; then
            VERSION=$(cd "${{ inputs.images_root_folder }}${{ matrix.images }}" && bash get-version.sh)

            # Split version into components
            IFS='.' read -ra PARTS <<< "$VERSION"
            MAJOR=${PARTS[0]}
            MINOR=${PARTS[1]}
            PATCH=${PARTS[2]}

            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "major=$MAJOR" >> $GITHUB_OUTPUT
            echo "minor=$MINOR" >> $GITHUB_OUTPUT
            echo "patch=$PATCH" >> $GITHUB_OUTPUT
          else
            echo "version=main" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.images }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}
            type=raw,value=${{ steps.version.outputs.major }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository }}/${{ matrix.images }}@sha256:%s ' *)
        shell: bash

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository }}/${{ matrix.images }}:${{ steps.version.outputs.version }}
        shell: bash
